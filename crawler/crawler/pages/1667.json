{'html': b'<html>\n<head>\n<title>Theory Lambda (Isabelle99-1: October 2000)<'
         b'/title>\n</head>\n\n<body>\n<h1>Theory Lambda</h1>\n\n\n<p>\n<a href'
         b'="index.html">Up</a> to index of Isabelle/HOL/raw-confluence-lam'
         b'bda\n</p>\n<b>theory</b> <i>Lambda</i> = <a href="Variables.html">'
         b'<i>Variables</i></a><br><b>files</b> <a href="Lambda.ML.html">[<tt>L'
         b'ambda.ML</tt>]</a>:\n\n<hr>\n<pre>(*  Title:      Lambda.thy\n    Au'
         b'thor:     James Brotherston / Rene Vestergaard\n    Revised:    3'
         b'rd August, 2000\n\n- Lambda terms using concrete variable names\n- '
         b'Definition of bound, free and capturing variables\n- Definition o'
         b'f substitution\n- Definition of "sharp" substitution which enable'
         b's some case-splitting on\n  substitution to be avoided under the '
         b'correct side conditions\n- Definition of unique bindings on terms'
         b' and the BCF predicate\n*)\n\nLambda = Variables +\n\ndatatype lt'
         b'erm = Var var | "$" lterm lterm (infixl 200) | Abs var lterm\n\nco'
         b'nsts\n  BV     :: lterm =&gt; var set\n  FV     :: lterm =&gt; var'
         b' set\n  Capt   :: [var,lterm] =&gt; var set\n  subst  :: [lterm,va'
         b'r,lterm] =&gt; lterm ("_[_:=_]" [300,0,0] 300)\n  subst2 :: [lter'
         b'm,var,lterm] =&gt; lterm ("_&lt;_:=_&gt;" [300,0,0] 300)\n  UB   '
         b'  :: lterm =&gt; bool\n  BCF    :: lterm =&gt; bool\n\nprimrec\n  BV'
         b'_Var "BV(Var x) = {}"\n  BV_App "BV(e1 $ e2) = (BV(e1) Un BV(e2))'
         b'"\n  BV_Abs "BV(Abs x e) = (BV(e) Un {x})"\n  \nprimrec\n  FV_Var "F'
         b'V(Var x) = {x}"\n  FV_App "FV(e1 $ e2) = (FV(e1) Un FV(e2))"\n  FV'
         b'_Abs "FV(Abs x e) = (FV(e) - {x})"\n\nprimrec\n  Capt_Var "Capt x ('
         b'Var y) = {}"\n  Capt_App "Capt x (e1 $ e2) = (Capt x e1) Un (Capt'
         b' x e2)"\n  Capt_Abs "Capt x (Abs y e) = (if x~=y &amp; x:FV(e)\n  '
         b'                              then (Capt x e) Un {y}\n           '
         b'                     else {})"\n  \nprimrec\n  subst_Var "(Var x)[y'
         b':=e] = (if x=y then e else Var x)"\n  subst_App "(e1 $ e2)[y:=e] '
         b'= e1[y:=e] $ e2[y:=e]"\n  subst_Abs "(Abs x e1)[y:=e] = (if x~=y '
         b'&amp; x~:FV(e) \n                                 then Abs x (e1['
         b'y:=e])\n                                 else Abs x e1)"\n\nprimrec'
         b'\n  subst2_Var "(Var x)&lt;y:=e&gt; = (if x=y then e else Var x)"'
         b'\n  subst2_App "(e1 $ e2)&lt;y:=e&gt; = e1&lt;y:=e&gt; $ e2&lt;y:'
         b'=e&gt;"\n  subst2_Abs "(Abs x e1)&lt;y:=e&gt; = (if x~=y then Abs'
         b' x (e1&lt;y:=e&gt;) else Abs x e1)"\n\nprimrec\n  UB_Var "UB(Var x)'
         b' = True"\n  UB_App "UB(e1 $ e2) = (UB(e1) &amp; UB(e2) &amp; (BV('
         b'e1) Int BV(e2) = {}))"\n  UB_Abs "UB(Abs x e) = (UB(e) &amp; x~:B'
         b'V(e))"\n\ndefs\n  BCF "BCF(e) == (UB(e) &amp; (FV(e) Int BV(e) = {}'
         b'))"\n\nend</pre>\n<hr>\n\n<p>\n<b>theorem</b> <i>aux_renaming_lemm'
         b'a_1:</i>\n<pre>  <font color="blue">y</font> : Capt <font color="'
         b'blue">x</font> <font color="blue">e</font> --&gt; <font color="blue"'
         b'>x</font> : FV <font color="blue">e</font></pre>\n</p>\n\n<p>\n<b>th'
         b'eorem</b> <i>renaming_sanity_1:</i>\n<pre>  <font color="blue">e<'
         b'/font>[<font color="blue">x</font>:=Var <font color="blue">x</font>]'
         b' = <font color="blue">e</font></pre>\n</p>\n\n<p>\n<b>theorem</b> <i'
         b'>renaming_sanity_2:</i>\n<pre>  <font color="blue">x</font> ~: FV'
         b' <font color="blue">e</font> --&gt; <font color="blue">e</font>[<fon'
         b't color="blue">x</font>:=<font color="blue">e\'</font>] = <font c'
         b'olor="blue">e</font></pre>\n</p>\n\n<p>\n<b>theorem</b> <i>renaming_'
         b'sanity_3:</i>\n<pre>  <font color="blue">x</font> ~: FV <font col'
         b'or="blue">e\'</font> &amp; Capt <font color="blue">x</font> <font'
         b' color="blue">e</font> Int FV <font color="blue">e\'</font> = {} '
         b'--&gt; <font color="blue">x</font> ~: FV (<font color="blue">e</font'
         b'>[<font color="blue">x</font>:=<font color="blue">e\'</font>])</p'
         b're>\n</p>\n\n<p>\n<b>theorem</b> <i>renaming_sanity_3:</i>\n<pre>'
         b'  [| <font color="blue">x</font> ~: FV <font color="blue">e\'</fo'
         b'nt>; Capt <font color="blue">x</font> <font color="blue">e</font> In'
         b't FV <font color="blue">e\'</font> = {} |] ==&gt; <font color="bl'
         b'ue">x</font> ~: FV (<font color="blue">e</font>[<font color="blue">x'
         b'</font>:=<font color="blue">e\'</font>])</pre>\n</p>\n\n<p>\n<b>t'
         b'heorem</b> <i>renaming_sanity_4:</i>\n<pre>  <font color="blue">y'
         b'</font> ~: FV <font color="blue">e</font> --&gt; <font color="blue">'
         b'e</font>[<font color="blue">x</font>:=Var <font color="blue">y</font'
         b'>][<font color="blue">y</font>:=Var <font color="blue">x</font>] = <'
         b'font color="blue">e</font></pre>\n</p>\n\n<p>\n<b>theorem</b> <i>sub'
         b'set_lemma_1:</i>\n<pre>  [| <font color="blue">A</font> &lt;= <fo'
         b'nt color="blue">B</font>; <font color="blue">x</font> ~: <font color'
         b'="blue">B</font> |] ==&gt; <font color="blue">x</font> ~: <font colo'
         b'r="blue">A</font></pre>\n</p>\n\n<p>\n<b>theorem</b> <i>subset_lemma'
         b'_2:</i>\n<pre>  [| <font color="blue">A</font> - {<font color="bl'
         b'ue">x</font>} &lt;= <font color="blue">B</font> - {<font color="blue'
         b'">x</font>}; <font color="blue">y</font> : <font color="blue">A</fon'
         b't>; <font color="blue">x</font> ~= <font color="blue">y</font> |] =='
         b'&gt; <font color="blue">y</font> : <font color="blue">B</font></pre>'
         b'\n</p>\n\n<p>\n<b>theorem</b> <i>Capt_FV_lemma_1:</i>\n<pre>  <fo'
         b'nt color="blue">y</font> ~: FV <font color="blue">e</font> --&gt; Ca'
         b'pt <font color="blue">y</font> <font color="blue">e</font> = {}</pre'
         b'>\n</p>\n\n<p>\n<b>theorem</b> <i>Capt_BV_lemma_1:</i>\n<pre>  <f'
         b'ont color="blue">y</font> ~: BV <font color="blue">e</font> --&gt; <'
         b'font color="blue">y</font> ~: Capt <font color="blue">x</font> <font'
         b' color="blue">e</font></pre>\n</p>\n\n<p>\n<b>theorem</b> <i>Capt_In'
         b't_FV_lemma_1:</i>\n<pre>  [| Capt <font color="blue">y</font> (Ab'
         b's <font color="blue">z</font> <font color="blue">e</font>) Int FV <f'
         b'ont color="blue">e\'</font> = {}; <font color="blue">y</font> ~= '
         b'<font color="blue">z</font> |] ==&gt; <font color="blue">z</font> ~:'
         b' FV <font color="blue">e\'</font> | <font color="blue">y</font> ~'
         b': FV <font color="blue">e</font></pre>\n</p>\n\n<p>\n<b>theorem</b> '
         b'<i>FV_subst_lemma_1:</i>\n<pre>  <font color="blue">x</font> : FV'
         b' (<font color="blue">e</font>[<font color="blue">y</font>:=<font col'
         b'or="blue">e\'</font>]) ==&gt; <font color="blue">x</font> : FV <f'
         b'ont color="blue">e\'</font> | <font color="blue">x</font> : FV <f'
         b'ont color="blue">e</font></pre>\n</p>\n\n<p>\n<b>theorem</b> <i>FV_s'
         b'ubst_lemma_2:</i>\n<pre>  <font color="blue">x</font> : FV <font '
         b'color="blue">e</font> --&gt; <font color="blue">x</font> ~= <font co'
         b'lor="blue">y</font> --&gt; <font color="blue">x</font> : FV (<font c'
         b'olor="blue">e</font>[<font color="blue">y</font>:=<font color="blue"'
         b">e'</font>])</pre>\n</p>\n\n<p>\n<b>theorem</b> <i>FV_subst_lemma_3:"
         b'</i>\n<pre>  <font color="blue">x</font> : FV <font color="blue">'
         b'e\'</font> ==&gt; <font color="blue">x</font> : FV <font color="b'
         b'lue">e</font> --&gt; <font color="blue">x</font> : FV (<font color="'
         b'blue">e</font>[<font color="blue">y</font>:=<font color="blue">e'
         b"'</font>])</pre>\n</p>\n\n<p>\n<b>theorem</b> <i>FV_subst_lemma_4:</"
         b'i>\n<pre>  <font color="blue">x</font> : FV <font color="blue">e1'
         b'</font> --&gt; <font color="blue">y</font> : FV <font color="blue">e'
         b'2</font> --&gt; <font color="blue">y</font> : FV (<font color="blue"'
         b'>e1</font>[<font color="blue">x</font>:=<font color="blue">e2</font>'
         b']) | <font color="blue">e1</font>[<font color="blue">x</font>:=<font'
         b' color="blue">e2</font>] = <font color="blue">e1</font></pre>\n</'
         b'p>\n\n<p>\n<b>theorem</b> <i>special_contrapositive:</i>\n<pre>  <fo'
         b'nt color="blue">A</font> --&gt; <font color="blue">B</font> --&gt; <'
         b'font color="blue">C</font> ==&gt; &not; <font color="blue">C</font> '
         b'--&gt; &not; <font color="blue">A</font> | &not; <font color="blue">'
         b'B</font></pre>\n</p>\n\n<p>\n<b>theorem</b> <i>FV_subst_lemma_5:</i>'
         b'\n<pre>  <font color="blue">x</font> ~: FV (<font color="blue">e<'
         b'/font>[<font color="blue">y</font>:=<font color="blue">e\'</font>'
         b']) ==&gt; <font color="blue">x</font> ~: FV <font color="blue">e</fo'
         b'nt> | <font color="blue">x</font> = <font color="blue">y</font></pre'
         b'>\n</p>\n\n<p>\n<b>theorem</b> <i>FV_subst_lemma_6:</i>\n<pre>  <'
         b'font color="blue">x</font> : FV <font color="blue">e\'</font> ==&'
         b'gt; Capt <font color="blue">y</font> <font color="blue">e</font> Int'
         b' FV <font color="blue">e\'</font> = {} --&gt; <font color="blue">'
         b'y</font> : FV <font color="blue">e</font> --&gt; <font color="blue">'
         b'x</font> : FV (<font color="blue">e</font>[<font color="blue">y</fon'
         b't>:=<font color="blue">e\'</font>])</pre>\n</p>\n\n<p>\n<b>theore'
         b'm</b> <i>capt_in_bound_var:</i>\n<pre>  Capt <font color="blue">x'
         b'</font> <font color="blue">e</font> &lt;= BV <font color="blue">e</f'
         b'ont></pre>\n</p>\n\n<p>\n<b>theorem</b> <i>BV_subst_lemma_1:</i>'
         b'\n<pre>  <font color="blue">x</font> : BV (<font color="blue">e</'
         b'font>[<font color="blue">y</font>:=<font color="blue">e\'</font>]'
         b') ==&gt; <font color="blue">x</font> : BV <font color="blue">e</font'
         b'> | <font color="blue">x</font> : BV <font color="blue">e\'</font'
         b'></pre>\n</p>\n\n<p>\n<b>theorem</b> <i>FV_lemma_1:</i>\n<pre>  <'
         b'font color="blue">x</font> ~: FV <font color="blue">e</font> &amp; <'
         b'font color="blue">x</font> ~: FV <font color="blue">e\'</font> --'
         b'&gt; <font color="blue">x</font> ~: FV (<font color="blue">e</font>['
         b'<font color="blue">y</font>:=<font color="blue">e\'</font>])</pre'
         b'>\n</p>\n\n<p>\n<b>theorem</b> <i>FV_var_subst_lemma_1:</i>\n<pre'
         b'>  [| <font color="blue">y</font> ~: FV <font color="blue">e</font>;'
         b' <font color="blue">y</font> ~= <font color="blue">z</font> |] ==&gt'
         b'; <font color="blue">y</font> ~: FV (<font color="blue">e</font>[<fo'
         b'nt color="blue">x</font>:=Var <font color="blue">z</font>])</pre'
         b'>\n</p>\n\n<p>\n<b>theorem</b> <i>BV_var_subst_lemma_1:</i>\n<pre'
         b'>  <font color="blue">y</font> ~: BV <font color="blue">e</font> ==&'
         b'gt; <font color="blue">y</font> ~: BV (<font color="blue">e</font>[<'
         b'font color="blue">x</font>:=Var <font color="blue">z</font>])</p'
         b're>\n</p>\n\n<p>\n<b>theorem</b> <i>Capt_induct_1:</i>\n<pre>  Ca'
         b'pt <font color="blue">y</font> (<font color="blue">e1</font> $ <font'
         b' color="blue">e2</font>) Int <font color="blue">A</font> = {} ==&gt;'
         b' Capt <font color="blue">y</font> <font color="blue">e1</font> Int <'
         b'font color="blue">A</font> = {} &amp; Capt <font color="blue">y</fon'
         b't> <font color="blue">e2</font> Int <font color="blue">A</font> = {}'
         b'</pre>\n</p>\n\n<p>\n<b>theorem</b> <i>Capt_induct_2:</i>\n<pre> '
         b' (Capt <font color="blue">x</font> (<font color="blue">e1</font> $ <'
         b'font color="blue">e2</font>) Un <font color="blue">A</font>) Int <fo'
         b'nt color="blue">B</font> = {}\n  ==&gt; (Capt <font color="blue">'
         b'x</font> <font color="blue">e1</font> Un <font color="blue">A</font>'
         b') Int <font color="blue">B</font> = {} &amp; (Capt <font color="blue'
         b'">x</font> <font color="blue">e2</font> Un <font color="blue">A</fon'
         b't>) Int <font color="blue">B</font> = {}</pre>\n</p>\n\n<p>\n<b>theo'
         b'rem</b> <i>Capt_induct_3:</i>\n<pre>  [| <font color="blue">x</fo'
         b'nt> ~= <font color="blue">y</font>; Capt <font color="blue">y</font>'
         b' (Abs <font color="blue">x</font> <font color="blue">e</font>) Int <'
         b'font color="blue">A</font> = {} |] ==&gt; Capt <font color="blue">y<'
         b'/font> <font color="blue">e</font> Int <font color="blue">A</font> ='
         b' {}</pre>\n</p>\n\n<p>\n<b>theorem</b> <i>Capt_induct_4:</i>\n<pr'
         b'e>  [| <font color="blue">y</font> ~= <font color="blue">x</font>; ('
         b'Capt <font color="blue">x</font> (Abs <font color="blue">y</font> <f'
         b'ont color="blue">e</font>) Un <font color="blue">A</font>) Int <font'
         b' color="blue">B</font> = {} |] ==&gt; (Capt <font color="blue">x</fo'
         b'nt> <font color="blue">e</font> Un <font color="blue">A</font>) Int '
         b'<font color="blue">B</font> = {}</pre>\n</p>\n\n<p>\n<b>theorem</b> '
         b'<i>Capt_induct_5:</i>\n<pre>  [| Capt <font color="blue">x</font>'
         b' (Abs <font color="blue">y</font> (<font color="blue">e1</font> $ <f'
         b'ont color="blue">e2</font>)) Int <font color="blue">A</font> = {}; <'
         b'font color="blue">y</font> ~= <font color="blue">x</font> |]\n  ='
         b'=&gt; Capt <font color="blue">x</font> (Abs <font color="blue">y</fo'
         b'nt> <font color="blue">e1</font>) Int <font color="blue">A</font> = '
         b'{} &amp; Capt <font color="blue">x</font> (Abs <font color="blue">y<'
         b'/font> <font color="blue">e2</font>) Int <font color="blue">A</font>'
         b' = {}</pre>\n</p>\n\n<p>\n<b>theorem</b> <i>Capt_induct_6:</i>\n<'
         b'pre>  [| Capt <font color="blue">x</font> (Abs <font color="blue">y<'
         b'/font> (Abs <font color="blue">z</font> <font color="blue">e</font>)'
         b') Int <font color="blue">A</font> = {}; <font color="blue">y</font> '
         b'~= <font color="blue">x</font>; <font color="blue">z</font> ~= <font'
         b' color="blue">x</font> |]\n  ==&gt; Capt <font color="blue">x</fo'
         b'nt> (Abs <font color="blue">y</font> <font color="blue">e</font>) In'
         b't <font color="blue">A</font> = {}</pre>\n</p>\n\n<p>\n<b>theorem</b'
         b'> <i>subst_equivalence:</i>\n<pre>  Capt <font color="blue">x</fo'
         b'nt> <font color="blue">e1</font> Int FV <font color="blue">e2</font>'
         b' = {} ==&gt; <font color="blue">e1</font>[<font color="blue">x</font'
         b'>:=<font color="blue">e2</font>] = <font color="blue">e1</font>&lt;<'
         b'font color="blue">x</font>:=<font color="blue">e2</font>&gt;</pr'
         b'e>\n</p>\n\n</body>\n</html>\n',
 'links': [1614, 1670, 1681],
 'pid': 1667,
 'url': 'http://www0.cs.ucl.ac.uk/staff/J.Brotherston/confluence_VB/Lambda.html'}