{'html': b'<html>\n<head>\n<title>Theory Alpha (Isabelle99-1: October 2000)</'
         b'title>\n</head>\n\n<body>\n<h1>Theory Alpha</h1>\n\n\n<p>\n<a href="'
         b'index.html">Up</a> to index of Isabelle/HOL/raw-confluence-lambd'
         b'a\n</p>\n<b>theory</b> <i>Alpha</i> = <a href="SubstLemmas.html"><'
         b'i>SubstLemmas</i></a><br><b>files</b> <a href="Alpha.ML.html">[<tt>A'
         b'lpha.ML</tt>]</a>:\n\n<hr>\n<pre>(*  Title:      Alpha.thy\n    Auth'
         b'or:     James Brotherston / Rene Vestergaard\n    Revised:    30t'
         b'h August, 2000\n\n- Single and transitive-reflexive alpha-reductio'
         b'n.\n- Inverse alpha-reduction and notion of alpha-equivalence.\n\n*'
         b')\n\n\nAlpha = SubstLemmas +\n  \nconsts  sq_alpha  :: "(lterm * '
         b'var * lterm) set"\n        i_alpha   :: "(lterm * var * lterm) se'
         b't"\n        alpha     :: "(lterm * lterm) set"\n        rev_alpha '
         b':: "(lterm * lterm) set"\n  \nsyntax  "-&gt;sA", "-&gt;iA"  :: [lt'
         b'erm,var,lterm] =&gt; bool (infixl 50)\n        "-&gt;A", "-&gt;&g'
         b't;A"   :: [lterm,lterm] =&gt; bool (infixl 50)\n        "A&lt;-",'
         b' "=A="    :: [lterm,lterm] =&gt; bool (infixl 50)\n  \ntranslation'
         b's\n  "(s,x) -&gt;sA t"  == "(s,x,t) : sq_alpha"\n  "(s,x) -&gt;iA '
         b't"  == "(s,x,t) : i_alpha"\n  "s -&gt;A t"       == "(s,t) : alph'
         b'a"\n  "s -&gt;&gt;A t"      == "(s,t) : alpha^*"\n  "s A&lt;- t"  '
         b'     == "(s,t) : rev_alpha"\n  "s =A= t"       == "(s,t) : (alpha'
         b' Un rev_alpha)^*"\n\ninductive sq_alpha  (* rewriting on an alpha-'
         b'enabled redex *)\nintrs\n  alpha  "[|x~=y; y~:(FV(e) Un Capt x e)|'
         b'] ==&gt;\n          ((Abs x e),y) -&gt;sA (Abs y (e[x:=Var y]))"\n'
         b"\ninductive i_alpha   (* contextual closure of 'squiggly alpha' *"
         b')\nintrs\n  index  "(s,y) -&gt;sA t ==&gt; (s,y) -&gt;iA t"\n  aapp'
         b'L  "(s,y) -&gt;iA t ==&gt; (s$u,y) -&gt;iA t$u"\n  aappR  "(s,y) '
         b'-&gt;iA t ==&gt; (u$s,y) -&gt;iA u$t"\n  aabs   "(s,y) -&gt;iA t '
         b'==&gt; ((Abs x s),y) -&gt;iA (Abs x t)"\n  \ninductive alpha     ('
         b'* version of i_alpha without variable indices *)\nintrs\n  strip  '
         b'"(s,y) -&gt;iA t ==&gt; s -&gt;A t"  \n\ninductive rev_alpha (* th'
         b'e symmetric of alpha *)\nintrs\n  rev    "s -&gt;A t ==&gt; t A&lt'
         b';- s"\n  \nend</pre>\n<hr>\n\n<p>\n<b>theorem</b> <i>alphaeq_sym:<'
         b'/i>\n<pre>  <font color="blue">e1</font> =A= <font color="blue">e'
         b'2</font> ==&gt; <font color="blue">e2</font> =A= <font color="blue">'
         b'e1</font></pre>\n</p>\n\n<p>\n<b>theorem</b> <i>aux_symmetry_lemma_1'
         b':</i>\n<pre>  [| <font color="blue">x</font> ~= <font color="blue'
         b'">y</font>; <font color="blue">y</font> ~: Capt <font color="blue">x'
         b'</font> <font color="blue">e</font> |] ==&gt; <font color="blue">x</'
         b'font> ~: FV (<font color="blue">e</font>[<font color="blue">x</font>'
         b':=Var <font color="blue">y</font>])</pre>\n</p>\n\n<p>\n<b>theorem</'
         b'b> <i>aux_symmetry_lemma_2:</i>\n<pre>  <font color="blue">x</fon'
         b't> ~= <font color="blue">y</font> &amp; <font color="blue">y</font> '
         b'~: FV <font color="blue">e</font> &amp; <font color="blue">y</font> '
         b'~: Capt <font color="blue">x</font> <font color="blue">e</font> --&g'
         b't; <font color="blue">x</font> ~: Capt <font color="blue">y</font> ('
         b'<font color="blue">e</font>[<font color="blue">x</font>:=Var <font c'
         b'olor="blue">y</font>])</pre>\n</p>\n\n<p>\n<b>theorem</b> <i>local_a'
         b'lpha_symmetry_1:</i>\n<pre>  (Abs <font color="blue">x</font> <fo'
         b'nt color="blue">e</font>, <font color="blue">y</font>) -&gt;sA Abs <'
         b'font color="blue">y</font> (<font color="blue">e</font>[<font color='
         b'"blue">x</font>:=Var <font color="blue">y</font>])\n  ==&gt; (Abs'
         b' <font color="blue">y</font> (<font color="blue">e</font>[<font colo'
         b'r="blue">x</font>:=Var <font color="blue">y</font>]), <font color="b'
         b'lue">x</font>) -&gt;sA Abs <font color="blue">x</font> (<font color='
         b'"blue">e</font>[<font color="blue">x</font>:=Var <font color="blue">'
         b'y</font>][<font color="blue">y</font>:=Var <font color="blue">x</fon'
         b't>])</pre>\n</p>\n\n<p>\n<b>theorem</b> <i>renaming4_enabled:</i'
         b'>\n<pre>  (Abs <font color="blue">x</font> <font color="blue">e</'
         b'font>, <font color="blue">y</font>) -&gt;sA Abs <font color="blue">y'
         b'</font> (<font color="blue">e</font>[<font color="blue">x</font>:=Va'
         b'r <font color="blue">y</font>]) ==&gt; <font color="blue">e</font> ='
         b' <font color="blue">e</font>[<font color="blue">x</font>:=Var <font '
         b'color="blue">y</font>][<font color="blue">y</font>:=Var <font color='
         b'"blue">x</font>]</pre>\n</p>\n\n<p>\n<b>theorem</b> <i>local_alpha_s'
         b'ymmetry_2:</i>\n<pre>  (Abs <font color="blue">x</font> <font col'
         b'or="blue">e</font>, <font color="blue">y</font>) -&gt;sA Abs <font c'
         b'olor="blue">y</font> (<font color="blue">e</font>[<font color="blue"'
         b'>x</font>:=Var <font color="blue">y</font>]) ==&gt; (Abs <font color'
         b'="blue">y</font> (<font color="blue">e</font>[<font color="blue">x</'
         b'font>:=Var <font color="blue">y</font>]), <font color="blue">x</font'
         b'>) -&gt;sA Abs <font color="blue">x</font> <font color="blue">e</fon'
         b't></pre>\n</p>\n\n<p>\n<b>theorem</b> <i>local_alpha_symmetry_3:</i>'
         b'\n<pre>  [| <font color="blue">x</font> ~= <font color="blue">y</'
         b'font>; <font color="blue">y</font> ~: FV <font color="blue">e</font>'
         b'; <font color="blue">y</font> ~: Capt <font color="blue">x</font> <f'
         b'ont color="blue">e</font> |] ==&gt; (Abs <font color="blue">y</font>'
         b' (<font color="blue">e</font>[<font color="blue">x</font>:=Var <font'
         b' color="blue">y</font>]), <font color="blue">x</font>) -&gt;sA Abs <'
         b'font color="blue">x</font> <font color="blue">e</font></pre>\n</p'
         b'>\n\n<p>\n<b>theorem</b> <i>squiggly_alpha_symmetric:</i>\n<pre>  (<'
         b'font color="blue">e</font>, <font color="blue">y</font>) -&gt;sA <fo'
         b'nt color="blue">e\'</font> ==&gt; EX <font color="green">x</font>'
         b'. (<font color="blue">e\'</font>, <font color="green">x</font>) -'
         b'&gt;sA <font color="blue">e</font></pre>\n</p>\n\n<p>\n<b>theorem</b'
         b'> <i>index_alpha_symmetric:</i>\n<pre>  (<font color="blue">e</fo'
         b'nt>, <font color="blue">y</font>) -&gt;iA <font color="blue">e\'<'
         b'/font> ==&gt; EX <font color="green">x</font>. (<font color="blue">e'
         b'\'</font>, <font color="green">x</font>) -&gt;iA <font color="blu'
         b'e">e</font></pre>\n</p>\n\n<p>\n<b>theorem</b> <i>alpha_symmetric:</'
         b'i>\n<pre>  <font color="blue">e</font> -&gt;A <font color="blue">'
         b'e\'</font> ==&gt; <font color="blue">e\'</font> -&gt;A <font color'
         b'="blue">e</font></pre>\n</p>\n\n<p>\n<b>theorem</b> <i>Lemma_D:<'
         b'/i>\n<pre>  <font color="blue">e</font> =A= <font color="blue">e\''
         b'</font> ==&gt; <font color="blue">e\'</font> -&gt;&gt;A <font col'
         b'or="blue">e</font></pre>\n</p>\n\n</body>\n</html>\n',
 'links': [1614, 1668, 2480],
 'pid': 1663,
 'url': 'http://www0.cs.ucl.ac.uk/staff/J.Brotherston/confluence_VB/Alpha.html'}