{'html': b'<html>\n<head>\n<title>File AlphaZero.ML (Isabelle99-1: October 20'
         b'00)</title>\n</head>\n\n<body>\n<h1>File AlphaZero.ML</h1>\n\n<hr>'
         b'\n<pre>(*  Title:      AlphaZero.ML\n    Author:     James Brother'
         b'ston / Rene Vestergaard\n    Revised:    30th August, 2000\n\n- Pro'
         b'perties of indexed alpha, alpha0, and alpha1, including equivalence '
         b'of\n  -&gt;&gt;iA0 and -&gt;&gt;iA1\n\n*)\n\nAddSIs i_alpha1.intr'
         b's;\nAddSIs cl_ialpha1.intrs;\nAddSIs cl_ialpha.intrs;\n\n\nGoal "'
         b'(s,y) -&gt;iA t ==&gt; (s,y) -&gt;&gt;iA t";\nby(rtac rt_ialpha.t'
         b'rans 1);\nby(atac 2);\nby(rtac rt_ialpha.refl 1);\nqed "rt_ialpha_b'
         b'ase";\n\n\nGoal "(s,y) -&gt;&gt;iA t ==&gt; s -&gt;&gt;A t";\nby(eta'
         b'c rt_ialpha.induct 1);\nby(Simp_tac 1);\nby(dtac alpha.strip 1);\nb'
         b'y(eatac rtrancl_into_rtrancl 1 1);\nqed "rt_ialpha_in_alpha";\n\n\nG'
         b'oal "(s,y) -&gt;&gt;iA t ==&gt; (Abs x s,y) -&gt;&gt;iA Abs x t"'
         b';\nby(etac rt_ialpha.induct 1);\nby(rtac rt_ialpha.refl 1);\nby(dre'
         b's_inst_tac [("x","x")] i_alpha.aabs 1);\nby(eatac rt_ialpha.trans'
         b' 1 1);\nqed "rt_ialpha_abs";\n\n\nGoal "(s,y) -&gt;&gt;iA t ==&gt; ('
         b's $ u,y) -&gt;&gt;iA (t $ u)";\nby(etac rt_ialpha.induct 1);\nby(r'
         b'tac rt_ialpha.refl 1);\nby(dres_inst_tac [("u","u")] i_alpha.aapp'
         b'L 1);\nby(eatac rt_ialpha.trans 1 1);\nqed "rt_ialpha_appL";\n\n'
         b'\nGoal "(s,y) -&gt;&gt;iA t ==&gt; (u $ s,y) -&gt;&gt;iA (u $ t)"'
         b';\nby(etac rt_ialpha.induct 1);\nby(rtac rt_ialpha.refl 1);\nby(dre'
         b's_inst_tac [("u","u")] i_alpha.aappR 1);\nby(eatac rt_ialpha.tran'
         b's 1 1);\nqed "rt_ialpha_appR";\n\n\nGoal "(t,y) -&gt;&gt;iA u ==&gt;'
         b' ALL s. (s,y) -&gt;&gt;iA t --&gt; (s,y) -&gt;&gt;iA u";\nby(etac'
         b' rt_ialpha.induct 1);\nby(ALLGOALS strip_tac);\nby(atac 1);\nby(eta'
         b'c allE 1);\nby(mp_tac 1);\nby(rotate_tac ~1 1);\nby(eatac rt_ialpha'
         b'.trans 1 1);\nqed "rt_ialpha_bigtrans";\n\n\nGoal "[|(s,y) -&gt;&gt;'
         b'iA t; (t,y) -&gt;&gt;iA u|] ==&gt; (s,y) -&gt;&gt;iA u";\nby(rota'
         b'te_tac ~1 1);\nby(dtac rt_ialpha_bigtrans 1);\nby(etac allE 1);\nby'
         b'(Fast_tac 1);\nqed "rt_ialpha_bigtrans";\n\n\nGoal "(s1,y) -&gt;&gt;'
         b'iA t1 ==&gt; (s2,y) -&gt;&gt;iA t2 --&gt; (s1 $ s2,y) -&gt;&gt;iA (t'
         b'1 $ t2)";\nby(etac rt_ialpha.induct 1);\nby(ALLGOALS strip_tac);\nb'
         b'y(etac rt_ialpha_appR 1);\nby(mp_tac 1);\nby(dtac rt_ialpha_base 1'
         b');\nby(etac rt_ialpha_bigtrans 1);\nby(etac rt_ialpha_appL 1);\nqed'
         b' "rt_ialpha_doubleApp";\n\n\nGoal "(s,y) -&gt;iA t ==&gt; FV(t) = F'
         b'V(s)";\nby(etac i_alpha.induct 1);\nby(Auto_tac);\nby(dtac FV_subst'
         b'_lemma_1 1);\nby(etac disjE 1);\nby(atac 2);\nby(Asm_full_simp_tac '
         b'1);\nby(cut_inst_tac [("x","x"),("e","e"),("e\'","Var y")] renamin'
         b'g_sanity_3 1);\nby(Asm_simp_tac 1);\nby(contr_tac 2);\nby(Auto_tac)'
         b';\nby(eatac (FV_subst_lemma_2 RS mp RS mp) 1 1);\nqed "ialpha_FV_l'
         b'emma";\n\n\nGoal "(s,y) -&gt;&gt;iA t ==&gt; FV(s) = FV(t)";\nby(eta'
         b'c rt_ialpha.induct 1);\nby(Simp_tac 1);\nby(dtac ialpha_FV_lemma 1'
         b');\nby(Asm_full_simp_tac 1);\nqed "rt_ialpha_FV_lemma";\n\n\nGoal'
         b' "Capt x e Int FV(e\') = {} --&gt; BV(e[x:=e\']) = (if x:FV(e) the'
         b'n BV(e) Un BV(e\') else BV(e))";\nby(induct_tac "e" 1);\nby(ALLGOAL'
         b'S strip_tac);\nby(Asm_full_simp_tac 1);\nby(dtac Capt_induct_1 1);'
         b'\nby(Auto_tac);\nqed "BV_subst_lemma_2";\n\n\nGoal "(s,y) -&gt;iA'
         b' t ==&gt; BV(t) &lt;= BV(s) Un {y}";\nby(etac i_alpha.induct 1);\n'
         b'by(ALLGOALS Full_simp_tac);\nby(Fast_tac 4);\nby(Fast_tac 3);\nby(F'
         b'ast_tac 2);\nby(etac sq_alpha_E2 1);\nby(Asm_simp_tac 1);\nby(stac '
         b'(BV_subst_lemma_2 RS mp) 1);\nby(Auto_tac);\nqed "i_alpha_BV_lemma'
         b'_1";\n\n\nGoal "(s,y) -&gt;iA1 t ==&gt; (s,y) -&gt;&gt;iA t";\nby(et'
         b'ac i_alpha1.induct 1);\nby(rtac rt_ialpha.refl 1);\nby(etac rt_ial'
         b'pha_appR 4);\nby(etac rt_ialpha_appL 3);\nby(etac rt_ialpha_abs 2)'
         b';\nby(rtac rt_ialpha_base 1);\nby(Auto_tac);\nby(rtac sq_alpha.alph'
         b'a 1);\nby(fatac not_sym 1 1);\nby(cut_inst_tac [("x","x"),("e","e"'
         b')] capt_in_bound_var 1);\nby(Fast_tac 1);\nqed "ialpha1_in_rt_ialp'
         b'ha";\n\n\nGoal "(s,y) -&gt;iA1 t ==&gt; FV(s) = FV(t)";\nby(dtac ial'
         b'pha1_in_rt_ialpha 1);\nby(etac rt_ialpha_FV_lemma 1);\nqed "ialpha'
         b'1_FV_lemma";\n\n\nGoal "(s,y) -&gt;iA1 t ==&gt; BV(t) &lt;= BV(s) U'
         b'n {y}";\nby(etac i_alpha1.induct 1);\nby(Auto_tac);\nby(cut_inst_ta'
         b'c [("x1","x"),("e1","e"),("e\'1","Var y")] (BV_subst_lemma_2 RS m'
         b'p) 1);\nby(cut_inst_tac [("x","x"),("e","e")] capt_in_bound_var 1'
         b');\nby(Simp_tac 1);\nby(Fast_tac 1);\nby(case_tac "x:FV(e)" 1);\nby('
         b'ALLGOALS Asm_full_simp_tac);\nqed "ialpha1_BV_lemma";\n\n\nGoal "(s,'
         b'ys) -&gt;&gt;ciA t ==&gt; FV(s) = FV(t)";\nby(etac cl_ialpha.indu'
         b'ct 1); \nby(Simp_tac 1);\nby(dtac ialpha_FV_lemma 1);\nby(Asm_simp_'
         b'tac 1);\nqed "cl_ialpha_FV_lemma";\n\n\nGoal "(s,ys) -&gt;&gt;ciA t '
         b'==&gt; BV(t) &lt;= BV(s) Un set(ys)";\nby(etac cl_ialpha.induct 1'
         b');\nby(Fast_tac 1);\nby(dtac i_alpha_BV_lemma_1 1);\nby(Asm_full_si'
         b'mp_tac 1);\nby(Blast_tac 1);\nqed "cl_ialpha_BV_lemma";\n\n\n(* L'
         b'emma showing equivalence of two transitivity notions on -&gt;&gt;iA1'
         b' *)\nGoal "(t,ys) -&gt;&gt;iA1 u ==&gt; ALL s y. (s,y) -&gt;iA1 t'
         b' --&gt; (s,ys@[y]) -&gt;&gt;iA1 u";\nby(etac cl_ialpha1.induct 1)'
         b';\nby(ALLGOALS strip_tac);\nby(Asm_full_simp_tac 1);\nby(Fast_tac 1'
         b');\nby(etac allE 1);\nby(etac allE 1);\nby(mp_tac 1);\nby(rotate_tac'
         b' ~1 1);\nby(datac cl_ialpha1.trans 1 1);\nby(Auto_tac);\nqed "cl_ia'
         b'lpha1_trans2";\n\n(* User-friendly version of the above *)\nGoal "['
         b'|(s,y) -&gt;iA1 t; (t,ys) -&gt;&gt;iA1 u|] ==&gt; (s,ys@[y]) -&gt;&g'
         b't;iA1 u";\nby(dtac cl_ialpha1_trans2 1);\nby(Auto_tac);\nqed "cl_ia'
         b'lpha1_trans2";\n\n\n(* Lemmas showing equivalence of our notions of'
         b' alpha *)\n\nval ialpha0_E1 = i_alpha0.mk_cases "(e,y) -&gt;iA0 e\''
         b'";\nval ialpha0_E2 = i_alpha0.mk_cases "(Abs x e,y) -&gt;iA0 Abs '
         b'x e\'";\n\nGoal "(e1,y) -&gt;iA1 e2 ==&gt; e1~=e2 --&gt; (e1,y) -&g'
         b't;iA0 e2";\nby(etac i_alpha1.induct 1);\nby(Fast_tac 1);\nby(ALLGOA'
         b'LS strip_tac);\nby(rtac i_alpha0.ialpha0 1);\nby(ALLGOALS Asm_full'
         b'_simp_tac);\nby(Fast_tac 2);\nby(rtac i_alpha.index 1);\nby(REPEAT_'
         b'DETERM (etac conjE 1));\nby(etac sq_alpha.alpha 1);\nby(dtac (Capt'
         b'_BV_lemma_1 RS mp) 1);\nby(Fast_tac 1);\nby(ALLGOALS (etac ialpha0'
         b'_E1));\nby(rtac i_alpha0.ialpha0 1);\nby(etac i_alpha.aabs 1);\nby('
         b'Force_tac 1);\nby(rtac i_alpha0.ialpha0 1);\nby(etac i_alpha.aappL'
         b' 1);\nby(Force_tac 1);\nby(rtac i_alpha0.ialpha0 1);\nby(etac i_alp'
         b'ha.aappR 1);\nby(Force_tac 1);\nqed "ialpha1_to_ialpha0";\n\n\nGo'
         b'al "(e,xs) -&gt;&gt;iA1 e\' ==&gt; e -&gt;&gt;A0 e\'";\nby(etac cl_'
         b'ialpha1.induct 1);\nby(rtac rtrancl_refl 1);\nby(case_tac "e2=e3" '
         b'1);\nby(Fast_tac 1);\nby(datac (ialpha1_to_ialpha0 RS mp) 1 1);\nby'
         b'(dtac alpha0.strip 1);\nby(eatac rtrancl_into_rtrancl 1 1);\nqed "'
         b'rt_ialpha1_to_rt_ialpha0";\n\n\nGoal "e -&gt;&gt;A e\' ==&gt; EX xs.'
         b' (e,xs) -&gt;&gt;ciA e\'";\nby(etac rtrancl_induct 1);\nby(Fast_tac'
         b' 1);\nby(etac exE 1);\nby(etac alpha_E 1);\nby(datac cl_ialpha.tran'
         b's 1 1);\nby(Fast_tac 1);\nqed "rt_alpha_to_rt_ialpha";\n\n\n(* Va'
         b'riable-substitutivity on -&gt;iA1 *)\nGoal "(e,z) -&gt;iA1 e\' ==&'
         b"gt; y~=z --&gt; y~:Capt x e --&gt; (e[x:=Var y],z) -&gt;iA1 e'[x:=Va"
         b'r y]";\nby(etac i_alpha1.induct 1);\nby(ALLGOALS strip_tac);\nby(As'
         b'm_simp_tac 1);\nby(Fast_tac 1);\nby(Asm_full_simp_tac 4);\nby(etac '
         b'i_alpha1.appR 4);\nby(Asm_full_simp_tac 3);\nby(etac i_alpha1.appL'
         b' 3);\nby(REPEAT (etac conjE 4));\nby(dres_inst_tac [("z","y"),("x"'
         b',"x")] BV_var_subst_lemma_1 4);\nby(ftac not_sym 4);\nby(datac FV_'
         b'var_subst_lemma_1 1 4);\nby(Fast_tac 4);\nby(REPEAT (etac conjE 3)'
         b');\nby(dres_inst_tac [("z","y"),("x","x")] BV_var_subst_lemma_1 3'
         b');\nby(ftac not_sym 3);\nby(datac FV_var_subst_lemma_1 1 3);\nby(Fa'
         b'st_tac 3);\nby(case_tac "x=xa" 2);\nby(Asm_full_simp_tac 2);\nby(ea'
         b'tac i_alpha1.abs 1 2);\nby(Asm_full_simp_tac 2);\nby(Auto_tac);\nby'
         b'(case_tac "x:FV(e)" 4);\nby(Asm_full_simp_tac 5);\nby(rotate_tac ~'
         b'1 4);\nby(Asm_full_simp_tac 4);\nby(stac Substitution_Lemma_4 1);\n'
         b'by(atac 1);\nby(atac 1);\nby(Asm_simp_tac 1);\nby(rtac i_alpha1.con'
         b'tr 1);\nby(dres_inst_tac [("z","y"),("x","x")] BV_var_subst_lemma'
         b'_1 1);\nby(dres_inst_tac [("z","y"),("x","x")] FV_var_subst_lemma'
         b'_1 1);\nby(atac 1);\nby(Force_tac 1);\nby(cut_inst_tac [("x","x"),('
         b'"e","e"),("e\'","Var ya")] renaming_sanity_3 1);\nby(Asm_simp_tac '
         b'1);\nby(fatac not_sym 1 1);\nby(cut_inst_tac [("x","x"),("e","e")]'
         b' capt_in_bound_var 1);\nby(Asm_simp_tac 1);\nby(Fast_tac 1);\nby(As'
         b'm_simp_tac 1);\nby(rtac i_alpha1.contr 1);\nby(Force_tac 1);\nby(ca'
         b'se_tac "x=y" 1);\nby(Asm_simp_tac 1);\nby(rtac i_alpha1.contr 1);\n'
         b'by(Asm_simp_tac 1);\nby(case_tac "x:FV(e)" 1);\nby(Asm_full_simp_t'
         b'ac 1);\nby(rotate_tac ~1 1);\nby(dres_inst_tac [("z","ya"),("x","y'
         b'")] FV_var_subst_lemma_1 1);\nby(fatac not_sym 1 1);\nby(Asm_simp_'
         b'tac 1);\nby(rtac i_alpha1.contr 1);\nby(Asm_simp_tac 1);\nqed "ialp'
         b'ha1_var_subst";</pre>\n<hr>\n\n</body>\n</html>\n',
 'links': [],
 'pid': 2483,
 'url': 'http://www0.cs.ucl.ac.uk/staff/J.Brotherston/confluence_VB/AlphaZero.ML.html'}