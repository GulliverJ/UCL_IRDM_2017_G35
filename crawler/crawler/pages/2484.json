{'html': b'<html>\n<head>\n<title>File FreshAlphaConf.ML (Isabelle99-1: Octob'
         b'er 2000)</title>\n</head>\n\n<body>\n<h1>File FreshAlphaConf.ML</h1>'
         b'\n\n<hr>\n<pre>(*  Title:      FreshAlphaConf.ML\n    Author:     Ja'
         b'mes Brotherston / Rene Vestergaard\n    Revised:    2nd August, 2'
         b'000\n\n- Proof of fresh-naming alpha confluence\n*)\n\nval ialpha'
         b'1_E1 = i_alpha1.mk_cases "(Var x,y) -&gt;iA1 e";\nval ialpha1_E2 '
         b'= i_alpha1.mk_cases "(Abs x e,y) -&gt;iA1 e\'";\nval ialpha1_E3 = '
         b'i_alpha1.mk_cases "(e1 $ e2,y) -&gt;iA1 e\'";\nval ialpha1_E4 = i_'
         b'alpha1.mk_cases "(Abs x e,y) -&gt;iA1 e[x:=Var y]";\n\n\nGoal "y~:('
         b'BV(Abs x e) Un FV(Abs x e)) ==&gt; y~:(BV(e) Un FV(e))";\nby(Auto'
         b'_tac);\nqed "BV_Un_FV_induct_1";\n\n\nGoal "y~:(BV(e1 $ e2) Un FV(e1'
         b' $ e2)) ==&gt; y~:(BV(e1) Un FV(e1)) &amp; y~:(BV(e2) Un FV(e2))'
         b'";\nby(Auto_tac);\nqed "BV_Un_FV_induct_2";\n\n\nGoal "y~:(BV(e) '
         b'Un FV(e)) --&gt; (e,y) -&gt;iA1 e";\nby(induct_tac "e" 1);\nby(ALL'
         b'GOALS strip_tac);\nby(Full_simp_tac 1);\nby(Fast_tac 1);\nby(dtac B'
         b'V_Un_FV_induct_2 1);\nby(Fast_tac 1);\nby(ftac BV_Un_FV_induct_1 1'
         b');\nby(mp_tac 1);\nby(Full_simp_tac 1);\nby(Fast_tac 1);\nqed "FAC_p'
         b'roposition_1";\n\n\nGoal "(e,y) -&gt;iA1 e\' ==&gt; y~:(BV(e) Un FV('
         b'e))";\nby(etac i_alpha1.induct 1);\nby(Auto_tac);\nqed "FAC_proposi'
         b'tion_2";\n\n\n(* Lemma 3, which involves another horrendous case-sp'
         b'lit *)\nGoal "(e1,z1) -&gt;iA1 e2 ==&gt; ALL e3. (e1,z2) -&gt;iA1'
         b' e3 --&gt; z1~=z2 --&gt; (EX e4. (e2,z2) -&gt;iA1 e4 &amp; (e3,z1) -'
         b'&gt;iA1 e4)";\nby(etac i_alpha1.induct 1);\nby(ALLGOALS strip_tac)'
         b';\n(* Var rule case *)\nby(etac ialpha1_E1 1);\nby(Asm_simp_tac 1);'
         b'\nby(Fast_tac 1);\nby(defer_tac 1);\n(* Abs rule case; splits into '
         b'two subcases, one of which is trivial *)\nby(etac ialpha1_E2 1);\n'
         b'by(Fast_tac 2);\nby(rotate_tac 3 1);\nby(ftac not_sym 1);\nby(rotat'
         b'e_tac ~1 1);\nby(fatac (ialpha1_var_subst RS mp RS mp) 1 1);\nby(c'
         b'ut_inst_tac [("x","x"),("e","e")] capt_in_bound_var 1);\nby(Fast_'
         b'tac 1);\nby(rotate_tac ~1 1);\nby(dres_inst_tac [("x","z2")] i_alp'
         b'ha1.abs 1);\nby(atac 1);\nby(Asm_simp_tac 1);\nby(rtac exI 1);\nby(r'
         b'tac conjI 1);\nby(atac 2);\nby(rtac i_alpha1.contr 1);\nby(Asm_simp'
         b'_tac 1);\nby(ftac ialpha1_FV_lemma 1);\nby(dtac ialpha1_BV_lemma 1'
         b');\nby(Asm_full_simp_tac 1);\nby(Fast_tac 1);\n(* AppL rule case; t'
         b'wo subcases, one of which is trivial *)\nby(etac ialpha1_E3 1);\nb'
         b'y(Fast_tac 1);\nby(Asm_simp_tac 1);\nby(ftac ialpha1_FV_lemma 1);\n'
         b'by(ftac ialpha1_BV_lemma 1);\nby(rotate_tac 4 1);\nby(ftac ialpha1'
         b'_FV_lemma 1);\nby(ftac ialpha1_BV_lemma 1);\nby(rtac exI 1);\nby(rt'
         b'ac conjI 1);\nby(etac i_alpha1.appR 1);\nby(Asm_full_simp_tac 1);\n'
         b'by(Fast_tac 1);\nby(etac i_alpha1.appL 1);\nby(Asm_full_simp_tac 1'
         b');\nby(rotate_tac ~1 1);\nby(dres_inst_tac [("x","y")] subset_lemm'
         b'a_1 1);\nby(Fast_tac 1);\nby(atac 1);\n(* AppR rule case; symmetric'
         b' to the previous case *)\nby(etac ialpha1_E3 1);\nby(Fast_tac 2);\n'
         b'by(Asm_simp_tac 1);\nby(ftac ialpha1_FV_lemma 1);\nby(ftac ialpha1'
         b'_BV_lemma 1);\nby(rotate_tac 4 1);\nby(ftac ialpha1_FV_lemma 1);\nb'
         b'y(ftac ialpha1_BV_lemma 1);\nby(rtac exI 1);\nby(rtac conjI 1);\nby'
         b'(etac i_alpha1.appL 1);\nby(Asm_full_simp_tac 1);\nby(Fast_tac 1);'
         b'\nby(etac i_alpha1.appR 1);\nby(Asm_full_simp_tac 1);\nby(rotate_ta'
         b'c ~1 1);\nby(dres_inst_tac [("x","y")] subset_lemma_1 1);\nby(Fast'
         b'_tac 1);\nby(atac 1);\n(* Contr rule case; two subcases, one of wh'
         b'ich is the same as the Abs case *)\nby(etac ialpha1_E2 1);\nby(def'
         b'er_tac 1);\nby(Asm_full_simp_tac 1);\nby(REPEAT (etac conjE 1));\nb'
         b'y(rotate_tac 3 1);\nby(ftac not_sym 1);\nby(rotate_tac ~1 1);\nby(f'
         b'atac (ialpha1_var_subst RS mp RS mp) 1 1);\nby(cut_inst_tac [("x"'
         b',"x"),("e","e")] capt_in_bound_var 1);\nby(Fast_tac 1);\nby(rotate'
         b'_tac ~1 1);\nby(dres_inst_tac [("x","y")] i_alpha1.abs 1);\nby(ata'
         b'c 1);\nby(rtac exI 1);\nby(etac conjI 1);\nby(rtac i_alpha1.contr 1'
         b');\nby(Asm_simp_tac 1);\nby(ftac ialpha1_FV_lemma 1);\nby(dtac ialp'
         b'ha1_BV_lemma 1);\nby(Asm_full_simp_tac 1);\nby(Fast_tac 1);\n(* Sub'
         b'case involving a second use of Contr *)\nby(Asm_full_simp_tac 1);'
         b'\nby(REPEAT (etac conjE 1));\nby(ftac not_sym 1);\nby(rtac exI 1);\n'
         b'by(rtac conjI 1);\nby(dres_inst_tac [("z","y"),("x","x")] BV_var_'
         b'subst_lemma_1 1);\nby(dres_inst_tac [("z","y"),("x","x")] FV_var_'
         b'subst_lemma_1 1);\nby(atac 1);\nby(rtac i_alpha1.contr 1);\nby(Forc'
         b'e_tac 1);\nby(stac Substitution_Lemma_3 1);\nby(Fast_tac 2);\nby(at'
         b'ac 2);\nby(Simp_tac 1);\nby(cut_inst_tac [("x","x"),("e","e")] cap'
         b't_in_bound_var 1);\nby(Fast_tac 1);\nby(rtac (FAC_proposition_1 RS'
         b' mp) 1);\nby(case_tac "y:FV(e)" 1);\nby(Asm_full_simp_tac 1);\nby(r'
         b'otate_tac 6 1);\nby(dres_inst_tac [("z","z2"),("x","x")] BV_var_s'
         b'ubst_lemma_1 1);\nby(dres_inst_tac [("z","z2"),("x","x")] FV_var_'
         b'subst_lemma_1 1);\nby(atac 1);\nby(Force_tac 1);\nqed "FAC_lemma_3"'
         b';\n\n(* User-friendly formulation of the above *)\nGoal "[|(e1,z1) '
         b'-&gt;iA1 e2; (e1,z2) -&gt;iA1 e3; z1~=z2|] ==&gt; EX e4. (e2,z2) -&g'
         b't;iA1 e4 &amp; (e3,z1) -&gt;iA1 e4";\nby(dtac FAC_lemma_3 1);\nby('
         b'Blast_tac 1);\nqed "FAC_lemma_3";\n\n\n(* Lemma 4 *)\nGoal "(e1,y'
         b') -&gt;iA e2 ==&gt; z~:(FV(e1) Un BV(e1) Un {y}) --&gt; (EX e3. (e1,'
         b'z) -&gt;iA1 e3 &amp; (e2,z) -&gt;iA1 e3)";\nby(etac i_alpha.induc'
         b't 1);\nby(ALLGOALS strip_tac);\nby(Auto_tac);\nby(rtac exI 1);\nby(r'
         b'tac conjI 1);\nby(rtac i_alpha1.contr 2);\nby(rotate_tac 4 2);\nby('
         b'dres_inst_tac [("x","x"),("z","y")] BV_var_subst_lemma_1 2);\nby('
         b'dres_inst_tac [("x","x"),("z","y")] FV_var_subst_lemma_1 2);\nby('
         b'atac 2);\nby(Asm_simp_tac 2);\nby(stac (Substitution_Lemma_1 RS mp'
         b' RS mp RS mp RS sym) 1);\nby(Asm_simp_tac 7);\nby(rtac i_alpha1.co'
         b'ntr 7);\nby(ALLGOALS Asm_full_simp_tac);\nby(fatac not_sym 1 1);\nb'
         b'y(Fast_tac 1);\nby(dtac (Capt_BV_lemma_1 RS mp) 1);\nby(Fast_tac 1'
         b');\nby(dres_inst_tac [("x","x"),("z","y")] BV_var_subst_lemma_1 1'
         b');\nby(dtac (Capt_BV_lemma_1 RS mp) 1);\nby(Fast_tac 1);\nqed "FAC_'
         b'lemma_4"; \n\n\n(* User-friendly version of the above *)\nGoal "[|(e'
         b'1,y) -&gt;iA e2; z~:(FV(e1) Un BV(e1) Un {y})|] ==&gt; EX e3. (e1,z)'
         b' -&gt;iA1 e3 &amp; (e2,z) -&gt;iA1 e3";\nby(dtac FAC_lemma_4 1);\n'
         b'by(Fast_tac 1);\nqed "FAC_lemma_4";\n\n\n(* Lemma 6 *)\nGoal "(e1'
         b',zs) -&gt;&gt;iA1 e2 ==&gt; ALL e3. (e1,z) -&gt;iA1 e3 --&gt; ~(z me'
         b'm zs) --&gt; (EX e4. (e2,z) -&gt;iA1 e4 &amp; (e3,zs) -&gt;&gt;iA1 e'
         b'4)";\nby(etac cl_ialpha1.induct 1);\nby(ALLGOALS strip_tac);\nby(Bl'
         b'ast_tac 1);\nby(dtac (list_theory_1 RS mp) 1);\nby(etac conjE 1);\n'
         b'by(etac allE 1);\nby(REPEAT (mp_tac 1));\nby(etac exE 1);\nby(etac '
         b'conjE 1);\nby(datac FAC_lemma_3 2 1);\nby(Blast_tac 1);\nqed "FAC_l'
         b'emma_6";\n\n\n(* User-friendly version of the above *)\nGoal "[|(e1,'
         b'zs) -&gt;&gt;iA1 e2; (e1,z) -&gt;iA1 e3; ~(z mem zs)|] ==&gt; EX e4.'
         b' (e2,z) -&gt;iA1 e4 &amp; (e3,zs) -&gt;&gt;iA1 e4";\nby(dtac FAC_'
         b'lemma_6 1);\nby(Blast_tac 1);\nqed "FAC_lemma_6";\n\n\nGoal "[|(A'
         b'LL z. z mem (zs) --&gt; ~ z mem xs &amp; z ~: BV e1 &amp; z ~: FV e1'
         b'); zs=y#ys|] ==&gt; ALL z. z mem ys --&gt; ~ z mem xs &amp; z ~: BV '
         b'e1 &amp; z ~: FV e1";\nby(Asm_full_simp_tac 1);\nqed "list_induct_'
         b'aux";\n\n\nGoal "[|uniqlist(zs); zs=y#ys|] ==&gt; uniqlist(ys) &amp'
         b'; ~(y mem ys)";\nby(Auto_tac);\nqed "uniqlist_induct_1";\n\n\n(* '
         b'Lemma 5 *)\nGoal "(e1,xs) -&gt;&gt;ciA e2 ==&gt; ALL zs. length(z'
         b's) = length(xs) --&gt; uniqlist(zs) --&gt; (ALL z.(z mem zs --&gt; ~'
         b'(z mem xs) &amp; z~:(BV(e1) Un FV(e1)))) --&gt; (EX e3. (e1,zs) -&gt'
         b';&gt;iA1 e3 &amp; (e2,rev zs) -&gt;&gt;iA1 e3)";\nby(etac cl_ialp'
         b'ha.induct 1);\nby(ALLGOALS strip_tac);\n(* Reflexive case *)\nby(As'
         b'm_full_simp_tac 1);\nby(Blast_tac 1);\n(* Inductive case; first ex'
         b'tract induction hypothesis *)\nby(dtac list_theory_2 1);\nby(asm_f'
         b'ull_simp_tac (simpset() addsimps[length_Suc_conv]) 1);\nby(REPEAT'
         b'_DETERM (etac exE 1));\nby(REPEAT_DETERM (etac conjE 1));\nby(etac'
         b' allE 1);\nby(mp_tac 1);\nby(fatac list_induct_aux 1 1);\nby(datac '
         b'uniqlist_induct_1 1 1);\nby(etac conjE 1);\nby(REPEAT_DETERM (mp_t'
         b'ac 1));\nby(ftac list_theory_4 1);\nby(etac allE 1); \nby(etac allE'
         b' 1);\nby(REPEAT_DETERM (mp_tac 1));\nby(REPEAT_DETERM (etac exE 1)'
         b');\nby(REPEAT_DETERM (etac conjE 1));\n(* Apply Lemma 4, showing y'
         b' is a suitable fresh variable *)\nby(ftac cl_ialpha_FV_lemma 1);\n'
         b'by(dtac cl_ialpha_BV_lemma 1);\nby(REPEAT_DETERM (dtac (list_theo'
         b'ry_3 RS mp) 1));\nby(dtac not_sym 1);\nby(Asm_full_simp_tac 1);\nby'
         b'(dtac FAC_lemma_4 1);\nby(Asm_full_simp_tac 1);\nby(etac conjI 1);'
         b'\nby(etac conjI 1);\nby(Fast_tac 1);\nby(etac exE 1);\nby(etac conjE'
         b' 1);\n(* Apply Lemma 6 *)\nby(datac FAC_lemma_6 1 1);\nby(rtac (lis'
         b't_theory_5 RS mp) 1);\nby(Asm_simp_tac 1);\nby(etac exE 1);\nby(eta'
         b'c conjE 1);\nby(rtac exI 1);\nby(rtac conjI 1);\nby(eatac cl_ialpha'
         b'1.trans 1 1);\nby(eatac cl_ialpha1_trans2 1 1);\nqed "FAC_lemma_5"'
         b';\n\n\n(* User-friendly version of Lemma 5 *)\nGoal "[|(e1,xs) -&gt;'
         b'&gt;ciA e2; uniqlist(zs); length(zs) = length(xs); ALL z.(z mem zs -'
         b'-&gt; ~(z mem xs) &amp; z~:(BV(e1) Un FV(e1)))|] ==&gt; (EX e3. (e1,'
         b'zs) -&gt;&gt;iA1 e3 &amp; (e2,rev zs) -&gt;&gt;iA1 e3)";\nby(dtac'
         b' FAC_lemma_5 1);\nby(Auto_tac);\nqed "FAC_lemma_5";\n\n\n(* Lemma'
         b' 7 *)\nGoal "e1 -&gt;&gt;A e2 ==&gt; EX e3. e1 -&gt;&gt;A0 e3 &am'
         b'p; e2 -&gt;&gt;A0 e3";\nby(dtac rt_alpha_to_rt_ialpha 1);\nby(etac'
         b' exE 1);\nby(cut_inst_tac [("n","length(xs)"),("e","e1"),("ys","x'
         b's")] exists_suitable_list 1);\nby(etac exE 1);\nby(REPEAT_DETERM ('
         b'etac conjE 1));\nby(datac FAC_lemma_5 2 1);\nby(etac exE 2);\nby(et'
         b'ac conjE 2);\nby(dtac rt_ialpha1_to_rt_ialpha0 2);\nby(dtac rt_ial'
         b'pha1_to_rt_ialpha0 2);\nby(Fast_tac 2);\nby(strip_tac 1);\nby(etac '
         b'allE 1);\nby(mp_tac 1);\nby(rtac conjI 1);\nby(Fast_tac 2);\nby(rtac'
         b' (list_theory_5 RS mp) 1);\nby(Fast_tac 1);\nqed "FAC_lemma_7"'
         b';\n\n\nGoal "[|x =A= y; y =A= z|] ==&gt; x =A= z";\nby(rtac rtrancl_'
         b'trans 1);\nby(Auto_tac);\nqed "alphaeq_trans";\n\n\nGoal "e -&gt;'
         b'&gt;A e\' ==&gt; e =A= e\'";\nby(etac rtrancl_induct 1);\nby(Fast_ta'
         b'c 1);\nby(rotate_tac 1 1);\nby(dres_inst_tac [("B","rev_alpha")] U'
         b'nI1 1);\nby(rotate_tac ~1 1);\nby(dtac r_into_rtrancl 1);\nby(datac'
         b' alphaeq_trans 2 1);\nqed "rt_alpha_in_alphaeq";\n\n\n(* FRESH-NAMIN'
         b'G ALPHA CONFLUENCE *)\nGoal "[|e -&gt;&gt;A e1; e -&gt;&gt;A e2|]'
         b' ==&gt; EX e3. e1 -&gt;&gt;A0 e3 &amp; e2 -&gt;&gt;A0 e3";\nby(rt'
         b'ac FAC_lemma_7 1);\nby(REPEAT_DETERM (dtac rt_alpha_in_alphaeq 1)'
         b');\nby(rtac Lemma_D 1);\nby(dtac alphaeq_sym 1);\nby(rotate_tac 1 1'
         b');\nby(rtac alphaeq_sym 1);\nby(eatac alphaeq_trans 1 1);\nqed "Fre'
         b'shAlphaConf";\n\n</pre>\n<hr>\n\n</body>\n</html>\n',
 'links': [],
 'pid': 2484,
 'url': 'http://www0.cs.ucl.ac.uk/staff/J.Brotherston/confluence_VB/FreshAlphaConf.ML.html'}