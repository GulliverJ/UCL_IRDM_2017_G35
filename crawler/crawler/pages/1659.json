{'html': b'<html>\n<head>\n<title>Theory ExistsBCF (Isabelle99-1: October 200'
         b'0)</title>\n</head>\n\n<body>\n<h1>Theory ExistsBCF</h1>\n\n\n<p>\n<'
         b'a href="index.html">Up</a> to index of Isabelle/HOL/raw-confluence-l'
         b'ambda\n</p>\n<b>theory</b> <i>ExistsBCF</i> = <a href="AlphaZero.h'
         b'tml"><i>AlphaZero</i></a> + <a href="VarList.html"><i>VarList</i></a'
         b'><br><b>files</b> <a href="ExistsBCF.ML.html">[<tt>ExistsBCF.ML</tt>'
         b']</a>:\n\n<hr>\n<pre>(*  Title:      ExistsBCF.thy\n    Author:     '
         b'James Brotherston / Rene Vestergaard\n    Revised:    30th August'
         b', 2000\n\n- Uses same definition of indexed-alpha0 as in the proof'
         b' of fresh-naming alpha\n  confluence, and also introduces the con'
         b'cept of the number of lambda\n  abstractions in a term\n\n*)\n\nE'
         b'xistsBCF = AlphaZero + VarList +\n\nconsts\n  lambdas :: "lterm =&g'
         b't; nat"\n\nprimrec\n  var "lambdas(Var x) = 0"\n  app "lambdas(e1 $ '
         b'e2) = lambdas(e1) + lambdas(e2)"\n  abs "lambdas(Abs x e) = 1 + l'
         b'ambdas(e)"\n\nend</pre>\n<hr>\n\n<p>\n<b>theorem</b> <i>cl_ialpha1'
         b'_FV_lemma:</i>\n<pre>  (<font color="blue">s</font>, <font color='
         b'"blue">ys</font>) -&gt;&gt;iA1 <font color="blue">t</font> ==&gt; FV'
         b' <font color="blue">s</font> = FV <font color="blue">t</font></p'
         b're>\n</p>\n\n<p>\n<b>theorem</b> <i>cl_ialpha1_BV_lemma:</i>\n<pr'
         b'e>  (<font color="blue">s</font>, <font color="blue">ys</font>) -&gt'
         b';&gt;iA1 <font color="blue">t</font> ==&gt; BV <font color="blue">t<'
         b'/font> &lt;= BV <font color="blue">s</font> Un set <font color="blue'
         b'">ys</font></pre>\n</p>\n\n<p>\n<b>theorem</b> <i>cl_ialpha1_abs:</i'
         b'>\n<pre>  (<font color="blue">e</font>, <font color="blue">xs</fo'
         b'nt>) -&gt;&gt;iA1 <font color="blue">e\'</font> ==&gt; <font colo'
         b'r="blue">x</font> ~: set <font color="blue">xs</font> --&gt; (Abs <f'
         b'ont color="blue">x</font> <font color="blue">e</font>, <font color="'
         b'blue">xs</font>) -&gt;&gt;iA1 Abs <font color="blue">x</font> <font '
         b'color="blue">e\'</font></pre>\n</p>\n\n<p>\n<b>theorem</b> <i>cl_'
         b'ialpha1_var_subst:</i>\n<pre>  (<font color="blue">e</font>, <fon'
         b't color="blue">xs</font>) -&gt;&gt;iA1 <font color="blue">e\'</fo'
         b'nt>\n  ==&gt; <font color="blue">y</font> ~: set <font color="blu'
         b'e">xs</font> --&gt; <font color="blue">y</font> ~: BV <font color="b'
         b'lue">e</font> --&gt; (<font color="blue">e</font>[<font color="blue"'
         b'>x</font>:=Var <font color="blue">y</font>], <font color="blue">xs</'
         b'font>) -&gt;&gt;iA1 <font color="blue">e\'</font>[<font color="bl'
         b'ue">x</font>:=Var <font color="blue">y</font>]</pre>\n</p>\n\n<p>\n<'
         b'b>theorem</b> <i>BV_var_subst:</i>\n<pre>  BV (<font color="blue"'
         b'>e</font>[<font color="blue">x</font>:=Var <font color="blue">y</fon'
         b't>]) = BV <font color="blue">e</font></pre>\n</p>\n\n<p>\n<b>theorem'
         b'</b> <i>UB_var_subst:</i>\n<pre>  UB <font color="blue">e</font> '
         b'--&gt; UB (<font color="blue">e</font>[<font color="blue">x</font>:='
         b'Var <font color="blue">y</font>])</pre>\n</p>\n\n<p>\n<b>theorem</b>'
         b' <i>FV_var_subst:</i>\n<pre>  <font color="blue">x</font> ~= <fon'
         b't color="blue">y</font> ==&gt; FV (<font color="blue">e</font>[<font'
         b' color="blue">x</font>:=Var <font color="blue">y</font>]) &lt;= FV <'
         b'font color="blue">e</font> Un {<font color="blue">y</font>}</pre'
         b'>\n</p>\n\n<p>\n<b>theorem</b> <i>EBCF_aux_1:</i>\n<pre>  [| ALL '
         b'<font color="green">z</font>. <font color="green">z</font> mem <font'
         b' color="blue">zs</font> --&gt; <font color="green">z</font> ~: FV (A'
         b'bs <font color="blue">x</font> <font color="blue">e1</font>) &amp; <'
         b'font color="green">z</font> ~: BV (Abs <font color="blue">x</font> <'
         b'font color="blue">e1</font>); <font color="blue">zs</font> = <font c'
         b'olor="blue">y</font> # <font color="blue">ys</font> |]\n  ==&gt; '
         b'ALL <font color="green">z</font>. <font color="green">z</font> mem <'
         b'font color="blue">ys</font> --&gt; <font color="green">z</font> ~: B'
         b'V <font color="blue">e1</font> &amp; <font color="green">z</font> ~:'
         b' FV <font color="blue">e1</font></pre>\n</p>\n\n<p>\n<b>theorem</b> '
         b'<i>EBCF_aux_2:</i>\n<pre>  ALL <font color="green">m</font> <font'
         b' color="green">xs</font>.\n     length <font color="green">xs</fo'
         b'nt> = <font color="blue">n</font> + <font color="green">m</font> --&'
         b'gt;\n     (EX <font color="green">ys</font> <font color="green">z'
         b's</font>. <font color="green">xs</font> = <font color="green">ys</fo'
         b'nt> @ <font color="green">zs</font> &amp; length <font color="green"'
         b'>ys</font> = <font color="blue">n</font> &amp; length <font color="g'
         b'reen">zs</font> = <font color="green">m</font>)</pre>\n</p>\n\n<p>\n'
         b'<b>theorem</b> <i>EBCF_aux_3:</i>\n<pre>  length <font color="blu'
         b'e">xs</font> = <font color="blue">n</font> + <font color="blue">m</f'
         b'ont> ==&gt; EX <font color="green">ys</font> <font color="green">zs<'
         b'/font>. <font color="blue">xs</font> = <font color="green">ys</font>'
         b' @ <font color="green">zs</font> &amp; length <font color="green">ys'
         b'</font> = <font color="blue">n</font> &amp; length <font color="gree'
         b'n">zs</font> = <font color="blue">m</font></pre>\n</p>\n\n<p>\n<b>th'
         b'eorem</b> <i>EBCF_aux_4:</i>\n<pre>  ALL <font color="green">x</f'
         b'ont>. <font color="green">x</font> mem <font color="blue">ys</font> '
         b'@ <font color="blue">zs</font> --&gt; <font color="blue">P</font> <f'
         b'ont color="green">x</font>\n  ==&gt; (ALL <font color="green">x</'
         b'font>. <font color="green">x</font> mem <font color="blue">ys</font>'
         b' --&gt; <font color="blue">P</font> <font color="green">x</font>) &a'
         b'mp; (ALL <font color="green">x</font>. <font color="green">x</font> '
         b'mem <font color="blue">zs</font> --&gt; <font color="blue">P</font> '
         b'<font color="green">x</font>)</pre>\n</p>\n\n<p>\n<b>theorem</b> <i>'
         b'uniqlist_property_1:</i>\n<pre>  uniqlist (<font color="blue">ys<'
         b'/font> @ <font color="blue">zs</font>) --&gt; uniqlist <font color="'
         b'blue">ys</font> &amp; uniqlist <font color="blue">zs</font></pre'
         b'>\n</p>\n\n<p>\n<b>theorem</b> <i>uniqlist_property_2:</i>\n<pre>'
         b'  uniqlist (<font color="blue">ys</font> @ <font color="blue">zs</fo'
         b'nt>) --&gt; set <font color="blue">ys</font> Int set <font color="bl'
         b'ue">zs</font> = {}</pre>\n</p>\n\n<p>\n<b>theorem</b> <i>EBCF_aux_5:'
         b'</i>\n<pre>  (ALL <font color="green">x</font>. <font color="gree'
         b'n">x</font> mem <font color="blue">ys</font> --&gt; <font color="gre'
         b'en">x</font> ~: FV <font color="blue">e1</font> &amp; <font color="g'
         b'reen">x</font> ~: FV <font color="blue">e2</font> &amp; <font color='
         b'"blue">P</font> <font color="green">x</font>) --&gt;\n  FV <font '
         b'color="blue">e1</font> Int set <font color="blue">ys</font> = {} &am'
         b'p; FV <font color="blue">e2</font> Int set <font color="blue">ys</fo'
         b'nt> = {}</pre>\n</p>\n\n<p>\n<b>theorem</b> <i>all_list_induct_1:</i'
         b'>\n<pre>  ALL <font color="green">x</font>. <font color="green">x'
         b'</font> mem <font color="blue">y</font> # <font color="blue">ys</fon'
         b't> --&gt; <font color="blue">P</font> <font color="green">x</font> ='
         b'=&gt; (ALL <font color="green">x</font>. <font color="green">x</font'
         b'> mem <font color="blue">ys</font> --&gt; <font color="blue">P</font'
         b'> <font color="green">x</font>) &amp; <font color="blue">P</font> <f'
         b'ont color="blue">y</font></pre>\n</p>\n\n<p>\n<b>theorem</b> <i>cl_i'
         b'alpha1_appL:</i>\n<pre>  (<font color="blue">e1</font>, <font col'
         b'or="blue">xs</font>) -&gt;&gt;iA1 <font color="blue">e1\'</font>\n'
         b'  ==&gt; ALL <font color="green">e2</font>.\n         (ALL <font '
         b'color="green">x</font>. <font color="green">x</font> mem <font color'
         b'="blue">xs</font> --&gt; <font color="green">x</font> ~: BV <font co'
         b'lor="green">e2</font> Un FV <font color="green">e2</font>) --&gt'
         b';\n         (<font color="blue">e1</font> $ <font color="green">e'
         b'2</font>, <font color="blue">xs</font>) -&gt;&gt;iA1 <font color="bl'
         b'ue">e1\'</font> $ <font color="green">e2</font></pre>\n</p>\n\n<'
         b'p>\n<b>theorem</b> <i>cl_ialpha1_appL:</i>\n<pre>  [| (<font color'
         b'="blue">e1</font>, <font color="blue">xs</font>) -&gt;&gt;iA1 <font '
         b'color="blue">e1\'</font>; ALL <font color="green">x</font>. <font'
         b' color="green">x</font> mem <font color="blue">xs</font> --&gt; <fon'
         b't color="green">x</font> ~: BV <font color="blue">e2</font> Un FV <f'
         b'ont color="blue">e2</font> |]\n  ==&gt; (<font color="blue">e1</f'
         b'ont> $ <font color="blue">e2</font>, <font color="blue">xs</font>) -'
         b'&gt;&gt;iA1 <font color="blue">e1\'</font> $ <font color="blue">e'
         b'2</font></pre>\n</p>\n\n<p>\n<b>theorem</b> <i>cl_ialpha1_appR:<'
         b'/i>\n<pre>  (<font color="blue">e1</font>, <font color="blue">xs<'
         b'/font>) -&gt;&gt;iA1 <font color="blue">e1\'</font>\n  ==&gt; ALL '
         b'<font color="green">e2</font>.\n         (ALL <font color="green"'
         b'>x</font>. <font color="green">x</font> mem <font color="blue">xs</f'
         b'ont> --&gt; <font color="green">x</font> ~: BV <font color="green">e'
         b'2</font> Un FV <font color="green">e2</font>) --&gt;\n         (<'
         b'font color="green">e2</font> $ <font color="blue">e1</font>, <font c'
         b'olor="blue">xs</font>) -&gt;&gt;iA1 <font color="green">e2</font> $ '
         b'<font color="blue">e1\'</font></pre>\n</p>\n\n<p>\n<b>theorem</b>'
         b' <i>cl_ialpha1_appR:</i>\n<pre>  [| (<font color="blue">e1</font>'
         b', <font color="blue">xs</font>) -&gt;&gt;iA1 <font color="blue">'
         b'e1\'</font>; ALL <font color="green">x</font>. <font color="green'
         b'">x</font> mem <font color="blue">xs</font> --&gt; <font color="gree'
         b'n">x</font> ~: BV <font color="blue">e2</font> Un FV <font color="bl'
         b'ue">e2</font> |]\n  ==&gt; (<font color="blue">e2</font> $ <font '
         b'color="blue">e1</font>, <font color="blue">xs</font>) -&gt;&gt;iA1 <'
         b'font color="blue">e2</font> $ <font color="blue">e1\'</font></pre'
         b'>\n</p>\n\n<p>\n<b>theorem</b> <i>cl_ialpha1_bigtrans:</i>\n<pre>'
         b'  (<font color="blue">e2</font>, <font color="blue">ys</font>) -&gt;'
         b'&gt;iA1 <font color="blue">e3</font> ==&gt; ALL <font color="green">'
         b'e1</font> <font color="green">xs</font>. (<font color="green">e1</fo'
         b'nt>, <font color="green">xs</font>) -&gt;&gt;iA1 <font color="blue">'
         b'e2</font> --&gt; (<font color="green">e1</font>, <font color="blue">'
         b'ys</font> @ <font color="green">xs</font>) -&gt;&gt;iA1 <font color='
         b'"blue">e3</font></pre>\n</p>\n\n<p>\n<b>theorem</b> <i>cl_ialpha1_bi'
         b'gtrans:</i>\n<pre>  [| (<font color="blue">e1</font>, <font color'
         b'="blue">xs</font>) -&gt;&gt;iA1 <font color="blue">e2</font>; (<font'
         b' color="blue">e2</font>, <font color="blue">ys</font>) -&gt;&gt;iA1 '
         b'<font color="blue">e3</font> |] ==&gt; (<font color="blue">e1</font>'
         b', <font color="blue">ys</font> @ <font color="blue">xs</font>) -&gt;'
         b'&gt;iA1 <font color="blue">e3</font></pre>\n</p>\n\n<p>\n<b>theorem<'
         b'/b> <i>cl_ialpha1_doubleApp:</i>\n<pre>  [| (<font color="blue">e'
         b'1</font>, <font color="blue">xs</font>) -&gt;&gt;iA1 <font color="bl'
         b'ue">e1\'</font>; ALL <font color="green">x</font>. <font color="g'
         b'reen">x</font> mem <font color="blue">xs</font> --&gt; <font color="'
         b'green">x</font> ~: BV <font color="blue">e2</font> Un FV <font color'
         b'="blue">e2</font>;\n     (<font color="blue">e2</font>, <font col'
         b'or="blue">ys</font>) -&gt;&gt;iA1 <font color="blue">e2\'</font>;'
         b' ALL <font color="green">y</font>. <font color="green">y</font> mem '
         b'<font color="blue">ys</font> --&gt; <font color="green">y</font> ~: '
         b'BV <font color="blue">e1\'</font> Un FV <font color="blue">e1\'</f'
         b'ont> |]\n  ==&gt; (<font color="blue">e1</font> $ <font color="bl'
         b'ue">e2</font>, <font color="blue">ys</font> @ <font color="blue">xs<'
         b'/font>) -&gt;&gt;iA1 <font color="blue">e1\'</font> $ <font color'
         b'="blue">e2\'</font></pre>\n</p>\n\n<p>\n<b>theorem</b> <i>key_to_'
         b'BCF_existence:</i>\n<pre>  ALL <font color="green">xs</font>.\n   '
         b'  lambdas <font color="blue">e1</font> = length <font color="green">'
         b'xs</font> --&gt;\n     uniqlist <font color="green">xs</font> --&'
         b'gt;\n     (ALL <font color="green">x</font>. <font color="green">'
         b'x</font> mem <font color="green">xs</font> --&gt; <font color="green'
         b'">x</font> ~: FV <font color="blue">e1</font> Un BV <font color="blu'
         b'e">e1</font>) --&gt;\n     (EX <font color="green">e2</font>. (<f'
         b'ont color="blue">e1</font>, rev <font color="green">xs</font>) -&gt;'
         b'&gt;iA1 <font color="green">e2</font> &amp; BCF <font color="green">'
         b'e2</font> &amp; BV <font color="green">e2</font> = set <font color="'
         b'green">xs</font>)</pre>\n</p>\n\n<p>\n<b>theorem</b> <i>ExistsBCF:</'
         b'i>\n<pre>  EX <font color="green">e2</font>. <font color="blue">e'
         b'1</font> -&gt;&gt;A0 <font color="green">e2</font> &amp; BCF <font c'
         b'olor="green">e2</font></pre>\n</p>\n\n</body>\n</html>\n',
 'links': [1614, 1664, 1669, 2486],
 'pid': 1659,
 'url': 'http://www0.cs.ucl.ac.uk/staff/J.Brotherston/confluence_VB/ExistsBCF.html'}